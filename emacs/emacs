(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(inhibit-startup-screen t)
 '(sh-indent-after-continuation nil)
 '(show-paren-mode t))
(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 )

;; Add load path
(add-to-list 'load-path "/home/campuzan/dot_files/emacs/packages/load_path")

;; whitespace functions for finding pesky spaces
(require 'whitespace)

;; Always display line number and column number.
(setq line-number-mode t)
(setq column-number-mode t)

;; Default tab display
(setq-default c-default-style "linux"
              c-basic-offset 2
              tab-width 2
              indent-tabs-mode nil)

(defun camp-c-mode-hook ()
    (c-set-offset 'innamespace '+)
    (c-set-offset 'substatement-open '0) ; brackets should be at same indentation level as the statements they open
    (c-set-offset 'inline-open '+)
    (c-set-offset 'block-open '+)
    (c-set-offset 'brace-list-open '+)   ; all "opens" should be indented by the c-indent-level
    (c-set-offset 'arglist-close '0)     ; closing argument list should be at the same indeation level as the statemnets they open
    (c-set-offset 'comment-intro '0)     ; Keep indentation level for comments.
    (c-set-offset 'statement-cont '(c-lineup-math)) ; Indent to operator, if no operater indent +
    (c-set-offset 'case-label '+))       ; indent case labels by c-indent-level, too
(add-hook 'c-mode-hook 'camp-c-mode-hook)
(add-hook 'c++-mode-hook 'camp-c-mode-hook)

;; Default tab display python
(add-hook 'python-mode-hook
	(lambda ()
		(setq indent-tabs-mode nil)
		(setq tab-width 2)
		(setq python-indent 2)))

;; Default indent shell
(defun camp-sh-mode-hook ()
     (interactive)
     (setq sh-basic-offset 2
           sh-indentation 2))

(add-hook `sh-mode-hook `camp-sh-mode-hook)

;; load nicec mode
(add-to-list 'load-path "/home/campuzan/projects/NiceC/Editors/Emacs")
(autoload 'nicec-mode "nicec-mode"
             "Major mode for editing NiceC files" t)
   (add-to-list 'auto-mode-alist '("\\.nc\\'" . nicec-mode))
   (add-to-list 'auto-mode-alist '("\\.nh\\'" . nicec-mode))
   (add-to-list 'auto-mode-alist '("\\.nm\\'" . nicec-mode))

;;load testc mode
(add-to-list 'load-path "/home/campuzan/projects/TestC/Editors/Emacs/")
(autoload 'testc-mode "testc-mode"
             "Major mode for editing TestC files" t)
   (add-to-list 'auto-mode-alist '("\\.tc\\'" . testc-mode))

;; Themes from this repository
;; Darker theme
(load-file "~/dot_files/emacs/themes/evenhold-theme-source-code.el")
;; Lighter theme
;;(load-file "~/dot_files/emacs/themes/leuven-theme-source-code.el")

(put 'upcase-region 'disabled nil)

(defvar my-keys-minor-mode-map
  (let ((map (make-sparse-keymap)))
    (define-key map (kbd "C-i") 'indent-region)
    map)
  "my-keys-minor-mode keymap.")

(define-minor-mode my-keys-minor-mode
  "A minor mode so that my key settings override annoying major modes."
  :init-value t
  :lighter " my-keys")

(my-keys-minor-mode 1)

(defun my-minibuffer-setup-hook ()
  (my-keys-minor-mode 0))

(add-hook 'minibuffer-setup-hook 'my-minibuffer-setup-hook)
(put 'downcase-region 'disabled nil)

(add-hook 'before-save-hook 'delete-trailing-whitespace)

;; Setup ctags
(setq path-to-ctags "/usr/bin/ctags")
(defun create-tags (dir-name)
     "Create tags file."
     (interactive "DDirectory: ")
     (eshell-command
      (format "find %s -type f -name \"*.[ch]\" | etags -" dir-name)))
